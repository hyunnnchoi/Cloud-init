apiVersion: kubeflow.org/v1
kind: "TFJob"
metadata:
  name: id1-imagenet-inception3-sync-batch128
spec:
  runPolicy:
    cleanPodPolicy: None
  tfReplicaSpecs:
    WORKER:
      replicas: 2
      template:
        metadata:
          annotations:
            "scheduling.volcano.sh/group-name": id1-imagenet-inception3-sync-batch128
        spec:
          containers:
          - name: tensorflow
            command: ["/bin/sh", "-c"]
            args:
              - |
                cd /tf_cnn_benchmarks/NVML;
                make;
                JOB=`python /tf_cnn_benchmarks/job_name.py`;
                CONTROLLER_HOST=`python -c "import os, json; tf_config = json.loads(os.environ.get('TF_CONFIG') or '{}'); cluster_config = tf_config.get('cluster', {}); controller_host = cluster_config.get('controller'); print(','.join(controller_host))"`;
                mkdir -p /result/id1_imagenet_inception3_sync_batch128;
                top -d 0.1 -b | grep tf_cnn > /result/id1_imagenet_inception3_sync_batch128/id1_imagenet_inception3_sync_batch128_${JOB}_cpu.txt &
                echo "id1_imagenet_inception3_sync_batch128" > /tf_cnn_benchmarks/model.txt;
                STARTTIME=`date "+%H:%M:%S.%N"`;
                echo "$STARTTIME" > /result/id1_imagenet_inception3_sync_batch128/id1_imagenet_inception3_sync_batch128_${JOB}_start_time.txt;
                python /tf_cnn_benchmarks/tf_cnn_benchmarks.py --variable_update=distributed_all_reduce --model=inception3 --data_name=imagenet --display_every=1 --batch_size=64 --cross_replica_sync=true --num_batches=235 --num_warmup_batches=0  --controller_host=${CONTROLLER_HOST} --all_reduce_spec=nccl/xring > /result/id1_imagenet_inception3_sync_batch128/id1_imagenet_inception3_sync_batch128_${JOB}_log.txt;
                ENDTIME=`date "+%H:%M:%S.%N"`;
                echo "$ENDTIME" > /result/id1_imagenet_inception3_sync_batch128/id1_imagenet_inception3_sync_batch128_${JOB}_end_time.txt
            ports:
            - containerPort: 2222
              name: tfjob-port
            image: potato4332/tf2-gpu-docker:0.4.5x
            imagePullPolicy: IfNotPresent
            resources:
              requests:
                cpu: 1
                nvidia.com/gpu: 1
              limits:
                cpu: 5
                nvidia.com/gpu: 1
            volumeMounts:
            - mountPath: /result
              name: tfjob-data
            - mountPath: /dev/shm
              name: shmdir
          volumes:
          - name: tfjob-data
            persistentVolumeClaim:
              claimName: tfjob-data-volume-claim
          - name: shmdir
            emptyDir:
              medium: Memory
              sizeLimit: "8G"
          nodeSelector:
            twonode: worker
          schedulerName: volcano
    CONTROLLER:
      replicas: 1
      template:
        metadata:
          annotations:
            "scheduling.volcano.sh/group-name": id1-imagenet-inception3-sync-batch128
        spec:
          containers:
          - name: tensorflow
            command: ["/bin/sh", "-c"]
            args:
              - |
                JOB=`python /tf_cnn_benchmarks/job_name.py`;
                CONTROLLER_HOST=`python -c "import os, json; tf_config = json.loads(os.environ.get('TF_CONFIG') or '{}'); cluster_config = tf_config.get('cluster', {}); controller_host = cluster_config.get('controller'); print(','.join(controller_host))"`;
                mkdir -p /result/id1_imagenet_inception3_sync_batch128;
                echo "id1_imagenet_inception3_sync_batch128" > /tf_cnn_benchmarks/model.txt;
                top -d 0.1 -b | grep tf_cnn > /result/id1_imagenet_inception3_sync_batch128/id1_imagenet_inception3_sync_batch128_${JOB}_cpu.txt &
                python /tf_cnn_benchmarks/tf_cnn_benchmarks.py --variable_update=distributed_all_reduce --model=inception3 --data_name=imagenet --display_every=1 --batch_size=64 --cross_replica_sync=true --num_batches=235 --num_warmup_batches=0  --controller_host=${CONTROLLER_HOST} --all_reduce_spec=nccl/xring > /result/id1_imagenet_inception3_sync_batch128/id1_imagenet_inception3_sync_batch128_${JOB}_log.txt;
                ENDTIME=`date "+%H:%M:%S.%N"`;
                echo "$ENDTIME" > /result/id1_imagenet_inception3_sync_batch128/id1_imagenet_inception3_sync_batch128_${JOB}_end_time.txt
            ports:
            - containerPort: 2222
              name: tfjob-port
            image: potato4332/tf2-cpu-docker:0.5.5x
            imagePullPolicy: IfNotPresent
            resources:
              requests:
                cpu: 1
              limits:
                cpu: 5
            volumeMounts:
            - mountPath: /result
              name: tfjob-data
            - mountPath: /dev/shm
              name: shmdir
          volumes:
          - name: tfjob-data
            persistentVolumeClaim:
              claimName: tfjob-data-volume-claim
          - name: shmdir
            emptyDir:
              medium: Memory
              sizeLimit: "8G"
          nodeSelector:
            twonode: worker
          schedulerName: volcano